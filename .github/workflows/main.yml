name: MERN Test Pipeline

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ['frontend', 'backend', 'admin']
      # Don't fail the entire workflow if one project fails
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ./${{ matrix.project }}/package-lock.json
    
    - name: Install dependencies
      working-directory: ./${{ matrix.project }}
      run: npm install
    
    # Add a step to create test script if it doesn't exist
    - name: Ensure test script exists
      working-directory: ./${{ matrix.project }}
      run: |
        if ! grep -q '"test"' package.json; then
          sed -i 's/"scripts": {/"scripts": {\n    "test": "echo No tests specified && exit 0",/' package.json
        fi
    
    - name: Run tests
      working-directory: ./${{ matrix.project }}
      run: npm test
      env:
        # Environment variables for backend tests
        MONGO_URI: ${{ matrix.project == 'backend' && 'mongodb://localhost:27017/testdb' || '' }}
        JWT_SECRET: ${{ matrix.project == 'backend' && 'test-secret' || '' }}
        STRIPE_SECRET_KEY: ${{ matrix.project == 'backend' && 'sk_test_example' || '' }}
        NODE_ENV: test

    # MongoDB service only for backend tests
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        # Only run for backend tests
        if: ${{ matrix.project == 'backend' }}
