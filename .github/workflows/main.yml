name: MERN CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
        options: --health-cmd "mongo --eval 'db.stats().ok'" --health-interval 10s --health-timeout 5s --health-retries 3
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd frontend && npm install
        cd ../backend && npm install
        cd ../admin && npm install
    
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test
    
    - name: Run backend tests
      working-directory: ./backend
      run: npm test
      env:
        MONGO_URI: mongodb://localhost:27017/testdb
        JWT_SECRET: test-secret
        NODE_ENV: test
    
    - name: Run admin tests
      working-directory: ./admin
      run: npm test

  # build-and-deploy:
  #   needs: test
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
    
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #       password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
  #   - name: Build and push frontend image
  #     working-directory: ./frontend
  #     run: |
  #       docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/swiftbites-frontend:latest .
  #       docker push ${{ secrets.DOCKER_HUB_USERNAME }}/swiftbites-frontend:latest
    
  #   - name: Build and push backend image
  #     working-directory: ./backend
  #     run: |
  #       docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/swiftbites-backend:latest .
  #       docker push ${{ secrets.DOCKER_HUB_USERNAME }}/swiftbites-backend:latest
    
  #   - name: Build and push admin image
  #     working-directory: ./admin
  #     run: |
  #       docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/swiftbites-admin:latest .
  #       docker push ${{ secrets.DOCKER_HUB_USERNAME }}/swiftbites-admin:latest
    
    # Add deployment steps here (e.g., SSH into server and run docker-compose up)
